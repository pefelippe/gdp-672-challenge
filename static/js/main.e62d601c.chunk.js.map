{"version":3,"sources":["components/Header.jsx","components/CountryDropdown.jsx","components/DatePicker.jsx","components/Card.jsx","api/Cases.js","components/CardContainer.jsx","api/CountriesList.js","components/Content.jsx","components/Footer.jsx","main/App.jsx","index.js"],"names":["Header","className","Dropdown","props","countriesDict","country","setCountryCode","onCountryChange","e","a","countryCode","target","value","FormControl","Select","variant","onChange","MenuItem","Object","entries","map","prop","countryName","createMenuItem","MaterialUIPickers","setPeriod","id","useState","dateDefault","selectedDate","setSelectedDate","handleDateChange","date","parseDate","data","toString","length","handlePeriod","seconds","getSeconds","minutes","getMinutes","hour","getHours","year","getFullYear","month","getMonth","day","getDate","useEffect","newPeriod","getPeriod","utils","DateFnsUtils","Grid","container","direction","disableToolbar","format","margin","label","maxDate","moment","KeyboardButtonProps","Cards","name","Number","separator","end","Api","setCases","startDate","endDate","url","countryPicked","console","log","fetch","then","response","json","cases","lastData","TotalConfirmed","TotalDeaths","TotalRecovered","keys","Confirmed","Deaths","Recovered","error","CardContainer","periodStart","periodEnd","Cases","getCases","checkCountry","sortDict","unorderedDict","orderedDict","sort","forEach","key","CountriesList","setCountriesDict","countries","ISO2","Country","Main","setPeriodStart","setPeriodEnd","Date","getCountries","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e62d601c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../styles/Header.css'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <span>Covid-19 Status</span>\r\n        </header>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nimport { Select, FormControl, MenuItem } from '@material-ui/core';\r\n\r\nimport '../styles/CountryDropdown.css';\r\n\r\nexport default function Dropdown(props) {\r\n\r\n    const { countriesDict, country, setCountryCode } = props;\r\n\r\n    const onCountryChange = async (e) => {\r\n        const countryCode = e.target.value;\r\n        setCountryCode(countryCode);\r\n    };\r\n\r\n    const createMenuItem = (prop) => {\r\n        const countryCode = prop[0]\r\n        const countryName = prop[1]\r\n        return <MenuItem key={countryCode} value={countryCode}> {countryName} </MenuItem>\r\n    }\r\n\r\n    return (\r\n        <div className=\"countryDropdown \">\r\n            <FormControl className=\"dropdown\">\r\n                <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\r\n                    <MenuItem key=\"world\" value=\"world\"> Worldwide </MenuItem>\r\n                    {countriesDict && Object.entries(countriesDict).map(countryCode => createMenuItem(countryCode))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n","import 'date-fns';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport moment from \"moment\";\r\n\r\nexport default function MaterialUIPickers(props) {\r\n\r\n  const setPeriod = props.setPeriod\r\n\r\n  const id = props.id\r\n\r\n  const [selectedDate, setSelectedDate] = useState(props.dateDefault);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const parseDate = (data => {\r\n    data = data.toString()\r\n    return (data.length == 1) ? '0' + data : data\r\n  })\r\n\r\n  const handlePeriod = () => {\r\n\r\n    if (!selectedDate) return;\r\n\r\n    var seconds = parseDate(selectedDate.getSeconds());\r\n\r\n    var minutes = parseDate(selectedDate.getMinutes());\r\n\r\n    var hour = parseDate(selectedDate.getHours());\r\n\r\n    var year = parseDate(selectedDate.getFullYear());\r\n    var month = parseDate(selectedDate.getMonth());\r\n    var day = parseDate(selectedDate.getDate());\r\n\r\n    let period = `${year}-${month}-${day}T${hour}:${minutes}:${seconds}Z` // tenho que mandar para a requisição\r\n\r\n    return period;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getPeriod = async () => {\r\n      const newPeriod = handlePeriod();\r\n      setPeriod(newPeriod);\r\n    }\r\n    getPeriod()\r\n  }, [selectedDate])\r\n\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n      <Grid container direction=\"column\" >\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          format=\"MM-dd-yyyy\"\r\n          margin=\"normal\"\r\n          id={id}\r\n          label={props.label}\r\n          value={selectedDate}\r\n          maxDate={moment()}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardTimePicker\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}","\r\nimport React from 'react'\r\n\r\nimport CountUp from 'react-countup';\r\n\r\nimport '../styles/Card.css'\r\n\r\nexport default function Cards(props) {\r\n\r\n    let { name, Number, label, country } = props\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <span className=\"type\"> {name} </span>\r\n            <span>{country}</span>\r\n            <h2 className=\"numberCases\">\r\n                {Number &&\r\n                    <CountUp\r\n                        separator=\".\"\r\n                        end={Number} />\r\n                }\r\n            </h2>\r\n            <span className=\"description\">\r\n                <i>{label}</i>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","\r\n// returns an object with confirmed cases, deaths, and recovered\r\n\r\nexport default async function Api(countriesDict, countryCode, setCases, startDate, endDate) {\r\n\r\n    let url = `https://api.covid19api.com/world/total`;\r\n\r\n    let countryPicked;\r\n\r\n    if (countryCode !== \"world\") {\r\n        countryPicked = countriesDict[countryCode]\r\n        url = `https://api.covid19api.com/country/${countryPicked}?from=${startDate}&to=${endDate}`\r\n        console.log(url)\r\n    }\r\n\r\n    await fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            try {\r\n                console.log(data)\r\n                let cases;\r\n                let lastData;\r\n                if ((countryCode === \"world\")) {\r\n                    lastData = data;\r\n                    cases = {\r\n                        TotalConfirmed: lastData.TotalConfirmed,\r\n                        TotalDeaths: lastData.TotalDeaths,\r\n                        TotalRecovered: lastData.TotalRecovered\r\n                    }\r\n                }\r\n                else {\r\n                    lastData = data[Object.keys(data)[Object.keys(data).length - 1]]\r\n                    cases = {\r\n                        TotalConfirmed: lastData.Confirmed,\r\n                        TotalDeaths: lastData.Deaths,\r\n                        TotalRecovered: lastData.Recovered\r\n                    }\r\n                }\r\n                setCases(cases)\r\n            }\r\n            catch (error) {\r\n                const cases = {\r\n                    TotalConfirmed: 0,\r\n                    TotalDeaths: 0,\r\n                    TotalRecovered: 0\r\n                }\r\n                setCases(cases);\r\n        }})\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport Card from '../components/Card';\r\n\r\nimport Cases from '../api/Cases'\r\n\r\nimport '../styles/CardContainer.css';\r\n\r\nexport default function CardContainer(props) {\r\n\r\n    const { countryCode, countriesDict, periodStart, periodEnd } = props;\r\n\r\n    const [cases, setCases] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCases = async () => {\r\n            Cases(countriesDict, countryCode, setCases, periodStart, periodEnd)\r\n\r\n        }\r\n        getCases();\r\n    }, [countryCode, periodStart, periodEnd]);\r\n\r\n    const checkCountry = countryCode == \"world\" ? \"Worldwide\" : countriesDict[countryCode]\r\n    \r\n    return (\r\n        <div className=\"cardContainer\">\r\n            <Card name=\"Confirmed\" Number={cases.TotalConfirmed} label=\"Number of infected by covid-19\" country = {checkCountry} />\r\n            <Card name=\"Recovered\" Number={cases.TotalRecovered} label=\"Number of recovered from covid-19\" country = {checkCountry}/>\r\n            <Card name=\"Deaths\" Number={cases.TotalDeaths} label=\"Number of deaths caused by covid-19\" country = {checkCountry }/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n// returns a dictionary with all API countries, with 'CountryCode' being the dictionary key\r\n\r\nconst url = \"https://api.covid19api.com/countries\"\r\n\r\nfunction sortDict(unorderedDict) {\r\n    const orderedDict = {};\r\n    Object.keys(unorderedDict).sort().forEach(function (key) {\r\n        orderedDict[key] = unorderedDict[key];\r\n    });\r\n    return orderedDict\r\n}\r\n\r\nexport default async function CountriesList(setCountriesDict) {\r\n    await fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let countries = {};\r\n            data.map(country => (\r\n                countries[country.ISO2] = country.Country\r\n            ));\r\n            setCountriesDict(sortDict(countries));\r\n        });\r\n}","\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport CountryDropdown from './CountryDropdown';\r\n\r\nimport DatePicker from './DatePicker';\r\n\r\nimport CardContainer from './CardContainer';\r\n\r\nimport CountriesList from '../api/CountriesList'\r\n\r\nimport '../styles/Content.css'\r\n\r\nexport default function Main() {\r\n\r\n    const [countryCode, setCountryCode] = useState('world')\r\n\r\n    const [countriesDict, setCountriesDict] = useState()\r\n\r\n    const [periodStart, setPeriodStart] = useState('0')\r\n\r\n    const [periodEnd, setPeriodEnd] = useState('2020-11-08T21:11:54')\r\n\r\n    let startDate = new Date('Jan 01 2020 00:00:00')\r\n\r\n    let endDate = new Date('2020-11-08T00:00:00')\r\n\r\n    // Get All Countries from API\r\n    useEffect(() => {\r\n        const getCountries = async () => {\r\n            CountriesList(setCountriesDict)\r\n        };\r\n        getCountries();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"countryDropdown\">\r\n                <CountryDropdown countriesDict = {countriesDict} country = {countryCode} setCountryCode = {setCountryCode} />\r\n            </div>\r\n            <div className=\"cardContainer\">\r\n                <CardContainer countryCode = {countryCode} countriesDict = {countriesDict} periodStart = {periodStart} periodEnd = {periodEnd}  />\r\n            </div>\r\n            <div className=\"datePicker\">\r\n                <DatePicker  label=\"Start\"dateDefault = { startDate } setPeriod = { setPeriodStart } className=\"startDatePicker\" />\r\n                <DatePicker label=\"End\"  dateDefault = { endDate } setPeriod = { setPeriodEnd } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react'\r\n\r\nimport '../styles/Footer.css'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span>\r\n                Wear a <b>Mask</b>. Save a <b>life</b>.\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport Content from '../components/Content';\r\n\r\nimport Footer from '../components/Footer';\r\n\r\nimport 'fontsource-montserrat/latin.css';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <Content />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './main/App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}